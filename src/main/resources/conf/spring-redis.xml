<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
      http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
      http://www.springframework.org/schema/context
      http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- 引入config配置文件 -->
	<context:property-placeholder location="classpath:conf/config.properties" />

	<bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">

		<property name="maxTotal" value="${redis.pool.maxTotal}"/> <!-- 控制一个pool可分配多少个jedis实例 -->
    	<property name="maxIdle" value="${redis.pool.maxIdle}" />   <!-- 控制一个pool最多有多少个状态为idle(空闲)的jedis实例 -->
    	<property name="minIdle" value="${redis.pool.minIdle}" />
		<property name="maxWaitMillis" value="${redis.pool.maxWait}" />  <!-- 表示当borrow一个jedis实例时，最大的等待时间，如果超过等待时间，则直接抛出JedisConnectionException -->
    	<property name="testOnBorrow" value="${redis.pool.testOnBorrow}" /> <!-- 在borrow一个jedis实例时，是否提前进行validate操作；如果为true，则得到的jedis实例均是可用的 -->

	</bean>

	<bean id="connectionFactory_redis"	class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
		<property name="hostName" value="${redis.url}" />
        <property name="port" value="${redis.port}" />
       	<property name="poolConfig"  ref="poolConfig" />
        <property name="password" value="${redis.password}" />
	</bean>
	
	<!-- RedisTemplate就是spring对redis的一个封装而已 类似以前的HibernateTemplate -->
	 <bean id="redisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate">  
        <property name="connectionFactory"   ref="connectionFactory_redis" />
    </bean>
            
	

</beans>